apiVersion: v1 # api文档版本
kind: Pod # 资源对象 也可以设置为Deplayment statefulset
metadata: # Pod 相关元数据，用于描述pod的配置
  name: nginx-prestop # pod名称
  labels: # 定义pod的标签
    type: app # 义label标签，名字为type，值为app
    test: 1.0.0 # 定义label标签，名字为test，值为版本号
  namespace: 'default' # 命令空间的配置
spec: # 期望pod按照以下描述进行创建
  terminationGracePeriodSeconds: 60
  containers: # 对于pod中的容器描述
  - name: nginx # 容器的名称
    image: nginx # 容器镜像版本
    imagePullPolicy: IfNotPresent # 镜像拉取策略，制定如果本地有就用本地，没有就用网上的
    lifecycle: # 生命周期配置
      postStart: # 生命周期启动阶段做的事，不一定在command之前运行
        exec:
          command:
          - sh
          - -c
          - "echo '<h1>pre stop</h1>' > /usr/share/nginx/html/prestop.html"
      preStop:
        exec:
          command:
          - sh
          - -c
          - "sleep 50; echo 'sleep finished....' >> /usr/share/nginx/html/prestop.html"
    command: # 指定容器启动时的命令
    - nginx
    - -g
    - 'daemon off;' # nginx -g 'demon off;'
    workingDir: /usr/share/nginx/html # 定义容器启动后的工作目录
    ports:
    - name: http # 端口名称
      containerPort: 80 # 描述容器内要暴露的端口
      protocol: TCP # 描述该端口基于哪种协议通信的
    env: # 环境变量
    - name: JVM_OPTS # 环境变量名称
      value: '-Xms128m -Xms128m' # 环境变量的值
    resources:
      requests: # 最少需要多少资源
        cpu: 100m # 限制cpu最少使用0.1个核心
        memory: 128Mi # 限制内存最少使用128M
      limits: # 最多使用多少资源
        cpu: 200m # 最多使用0.2个核心
        memory: 256Mi # 限制最多使用256M
  restartPolicy: OnFailure # 重启策略，只有失败才会重启
